[{"/home/jools/uni-bus-react/src/index.tsx":"1","/home/jools/uni-bus-react/src/reportWebVitals.ts":"2","/home/jools/uni-bus-react/src/App.tsx":"3","/home/jools/uni-bus-react/src/api/APIUtils.ts":"4","/home/jools/uni-bus-react/src/components/Map/Map.tsx":"5","/home/jools/uni-bus-react/src/components/NewPanel/NewPanel.tsx":"6","/home/jools/uni-bus-react/src/components/Map/mapstyles-light.ts":"7","/home/jools/uni-bus-react/src/components/Map/mapstyles-dark.ts":"8","/home/jools/uni-bus-react/src/config.ts":"9"},{"size":500,"mtime":1607191946060,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1607191946060,"results":"12","hashOfConfig":"11"},{"size":1932,"mtime":1607191946060,"results":"13","hashOfConfig":"11"},{"size":2241,"mtime":1607191946060,"results":"14","hashOfConfig":"11"},{"size":6924,"mtime":1607191946060,"results":"15","hashOfConfig":"11"},{"size":3028,"mtime":1607191946060,"results":"16","hashOfConfig":"11"},{"size":4722,"mtime":1607191190800,"results":"17","hashOfConfig":"11"},{"size":2622,"mtime":1607191190800,"results":"18","hashOfConfig":"11"},{"size":84,"mtime":1607184644330,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sye8mo",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/jools/uni-bus-react/src/index.tsx",[],"/home/jools/uni-bus-react/src/reportWebVitals.ts",[],["42","43"],"/home/jools/uni-bus-react/src/App.tsx",["44"],"import React, { useState, useEffect } from \"react\";\nimport { MotionValue } from \"framer-motion\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Map } from \"./components/Map/Map\";\nimport { NewPanelComponent } from \"./components/NewPanel/NewPanel\";\n// import \"../styles/globals.css\";\nimport { Stop } from \"./models/stop\";\nimport { getStops } from \"./api/APIUtils\";\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport styles from \"./styles/Home.module.css\";\n\nfunction App() {\n  const [value, setValue] = useState<MotionValue<number>>(new MotionValue(0));\n  const onPanelLoad = (motionValue: MotionValue<number>) => {\n    setValue(motionValue);\n  };\n  const [stops, setStops] = useState([]);\n  const [currentStop, setCurrentStop] = useState<Stop>();\n  useEffect(() => {\n    const getData = async () => {\n      const res = await getStops();\n      setStops(res);\n    };\n    getData();\n  }, []);\n  const selectStop = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCurrentStop(event.target.value as Stop);\n  };\n  return (\n    // <div className=\"App\">\n    <>\n      <Map\n        position={{ lat: 50.794236, lng: -1.075 }}\n        padding={{ bottom: 812 / 2 }}\n        logoPosition={value}\n        stopMarkersEnabled={true}\n        routeOverlayEnabled={true}\n        currentStop={currentStop}\n      />\n      <NewPanelComponent\n        onLoad={onPanelLoad}\n        panel1Children={\n          <>\n            <FormControl className={styles.stopSelector}>\n              <Select\n                className={styles.stopSelectorSelect}\n                value={currentStop}\n                onChange={selectStop}\n              >\n                {stops.map((stop: Stop) => {\n                  return <MenuItem value={stop as any}>{stop.name}</MenuItem>;\n                })}\n              </Select>\n            </FormControl>\n          </>\n        }\n      />\n    </>\n    // </div>\n  );\n}\n\nexport default App;\n","/home/jools/uni-bus-react/src/api/APIUtils.ts",[],"/home/jools/uni-bus-react/src/components/Map/Map.tsx",["45","46","47"],"import {\r\n  GoogleMap,\r\n  Marker,\r\n  Polyline,\r\n  useJsApiLoader,\r\n} from \"@react-google-maps/api\";\r\nimport { mapStylesLight } from \"./mapstyles-light\";\r\nimport { mapStylesDark } from \"./mapstyles-dark\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { getRoutePath, getStops } from \"../../api/APIUtils\";\r\nimport { Stop } from \"../../models/stop\";\r\nimport purpleStopMarker from \"../../assets/stop-marker-icon-purple.svg\";\r\nimport blueStopMarker from \"../../assets/stop-marker-icon-blue.svg\";\r\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\nimport {\r\n  motion,\r\n  MotionValue,\r\n  useMotionValue,\r\n  useTransform,\r\n} from \"framer-motion\";\r\nimport { config } from \"../../config\";\r\n\r\nconst mapOptions: google.maps.MapOptions = {\r\n  disableDefaultUI: true,\r\n  gestureHandling: \"greedy\",\r\n  clickableIcons: false,\r\n};\r\n\r\nconst getLocation: () => Promise<google.maps.LatLngLiteral> = () => {\r\n  return new Promise((resolve) => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      const position: google.maps.LatLngLiteral = {\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      };\r\n      resolve(position);\r\n    });\r\n  });\r\n};\r\n\r\ninterface MapProps {\r\n  style?: CSSProperties;\r\n  position: google.maps.LatLngLiteral;\r\n  padding?: google.maps.Padding;\r\n  darkModeEnabled?: boolean;\r\n  routeOverlayEnabled?: boolean;\r\n  stopMarkersEnabled?: boolean;\r\n  onMarkerSelect?: (stop: Stop) => void;\r\n  logoPosition: MotionValue<number>;\r\n  currentStop?: Stop;\r\n}\r\n\r\nexport const Map = (props: MapProps) => {\r\n  const {\r\n    position,\r\n    style,\r\n    padding,\r\n    darkModeEnabled,\r\n    routeOverlayEnabled,\r\n    stopMarkersEnabled,\r\n    onMarkerSelect,\r\n    logoPosition,\r\n    currentStop,\r\n  } = props;\r\n\r\n  const [map, setMap] = useState<google.maps.Map>();\r\n  const [routeOverlay, setRouteOverlay] = useState<google.maps.LatLng[]>();\r\n  const [stops, setStops] = useState<Stop[]>();\r\n  const [selectedStop, setSelectedStop] = useState<Stop>();\r\n  const logoContainer = useRef() as any;\r\n\r\n  const initialLogoPosition = useMotionValue(0);\r\n  const logoPos = useTransform(\r\n    logoPosition || initialLogoPosition,\r\n    (value) => value - window.innerWidth\r\n  );\r\n\r\n  const getBounds = (\r\n    value: google.maps.LatLngLiteral,\r\n    r: number\r\n  ): google.maps.LatLngBounds => {\r\n    const dY = (360 * r) / 6371;\r\n    const dX = dY * Math.cos(value.lng);\r\n    const lat1 = value.lat - dX;\r\n    const lng1 = value.lng - dY;\r\n    const lat2 = value.lat + dX;\r\n    const lng2 = value.lng + dY;\r\n    return new google.maps.LatLngBounds(\r\n      { lat: lat1, lng: lng1 },\r\n      { lat: lat2, lng: lng2 }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setRouteOverlay(await getRoutePath());\r\n      setStops(await getStops());\r\n    };\r\n    getData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (map) {\r\n      const bounds = getBounds(position, 0.5);\r\n      map.fitBounds(bounds, padding);\r\n    }\r\n  }, [position]);\r\n\r\n  useEffect(() => {\r\n    setSelectedStop(currentStop);\r\n    if (map && currentStop) {\r\n      const bounds = getBounds(\r\n        { lat: currentStop.location.lat(), lng: currentStop.location.lng() },\r\n        0.05\r\n      );\r\n      map.fitBounds(bounds, padding);\r\n    }\r\n  }, [currentStop]);\r\n\r\n  const moveLogo = (map: any) => {\r\n    let isCalled = false;\r\n    const mapObserver = new MutationObserver((mutationList, observer) => {\r\n      for (const mutation of mutationList) {\r\n        if (mutation.type === \"childList\") {\r\n          const logoElement = map.__gm.Ma.querySelector('[rel=\"noopener\"]');\r\n          if (logoElement) {\r\n            if (!isCalled) {\r\n              isCalled = true;\r\n              observer.disconnect();\r\n              const logoEl = logoElement.parentElement.removeChild(logoElement);\r\n              if (logoEl && logoContainer) {\r\n                logoContainer?.current?.append(logoEl);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    mapObserver.observe(map.__gm.Ma, { childList: true, subtree: true });\r\n  };\r\n\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    googleMapsApiKey: config.mapsApiKey,\r\n  });\r\n\r\n  const renderMap = () => {\r\n    const onLoad = (mapInstance: google.maps.Map) => {\r\n      setMap(mapInstance);\r\n      const bounds = getBounds(position, 0.5);\r\n      mapInstance.fitBounds(bounds, padding);\r\n      moveLogo(mapInstance);\r\n    };\r\n\r\n    const onUnmount = () => {\r\n      setMap(undefined);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <motion.div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 99999,\r\n            bottom: \"52vh\",\r\n            left: \"4vw\",\r\n            x: logoPos,\r\n          }}\r\n          ref={logoContainer}\r\n        ></motion.div>\r\n        <GoogleMap\r\n          mapContainerStyle={{\r\n            ...(style || { width: \"100vw\", height: \"100vh\" }),\r\n            zIndex: 10,\r\n          }}\r\n          options={{\r\n            ...mapOptions,\r\n            styles: darkModeEnabled ? mapStylesDark : mapStylesLight,\r\n          }}\r\n          onLoad={onLoad}\r\n          onUnmount={onUnmount}\r\n        >\r\n          {routeOverlayEnabled && (\r\n            <Polyline\r\n              path={routeOverlay}\r\n              options={{\r\n                strokeColor: darkModeEnabled ? \"#03A9F4\" : \"#7B1FA2\",\r\n                strokeOpacity: 0.75,\r\n              }}\r\n            />\r\n          )}\r\n          {stopMarkersEnabled &&\r\n            stops?.map((stop, index) => {\r\n              return (\r\n                <Marker\r\n                  key={index}\r\n                  position={stop.location}\r\n                  options={{\r\n                    icon: {\r\n                      url:\r\n                        (darkModeEnabled &&\r\n                          selectedStop?.routeOrder !== index) ||\r\n                        (!darkModeEnabled && selectedStop?.routeOrder === index)\r\n                          ? blueStopMarker\r\n                          : purpleStopMarker,\r\n                      scaledSize: new google.maps.Size(35, 50),\r\n                      origin: new google.maps.Point(0, 0),\r\n                      anchor: new google.maps.Point(17.5, 50),\r\n                    },\r\n                  }}\r\n                  onClick={() => {\r\n                    setSelectedStop(stop);\r\n                    const bounds = getBounds(\r\n                      {\r\n                        lat: stop.location.lat(),\r\n                        lng: stop.location.lng(),\r\n                      },\r\n                      0.05\r\n                    );\r\n                    map?.fitBounds(bounds, padding);\r\n                    onMarkerSelect && onMarkerSelect(stop);\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n        </GoogleMap>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (loadError) {\r\n    return <div>Map cannot be loaded :(</div>;\r\n  }\r\n\r\n  return isLoaded ? renderMap() : <div>loading...</div>;\r\n};\r\n","/home/jools/uni-bus-react/src/components/NewPanel/NewPanel.tsx",["48","49"],"import {\r\n  motion,\r\n  MotionValue,\r\n  PanInfo,\r\n  useAnimation,\r\n  useMotionValue,\r\n} from \"framer-motion\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport type { ReactNode } from \"react\";\r\nimport styles from \"./NewPanel.module.css\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\ninterface PanelProps {\r\n  panel1Children?: ReactNode;\r\n  panel2Children?: ReactNode;\r\n  style?: any;\r\n  onLoad?: (motionValue: MotionValue<number>) => void;\r\n}\r\n\r\nexport const NewPanelComponent = (props: PanelProps) => {\r\n  const { panel1Children, panel2Children, style, onLoad } = props;\r\n\r\n  const constrainstRef1 = useRef(null);\r\n  const constrainstRef2 = useRef(null);\r\n\r\n  const x = useMotionValue<number>(0);\r\n\r\n  useEffect(() => {\r\n    console.log(window.innerWidth);\r\n    x.set(window.innerWidth);\r\n    onLoad && onLoad(x);\r\n  }, []);\r\n\r\n  const panel1Controls = useAnimation();\r\n  const panel2Controls = useAnimation();\r\n\r\n  const panel2DragEnd = (ev: Event, info: PanInfo) => {\r\n    const shouldClose =\r\n      info.velocity.x > 20 || (info.velocity.x >= 0 && info.point.x > 45);\r\n    if (shouldClose) {\r\n      panel2Controls.start(\"stage1\");\r\n    } else {\r\n      panel2Controls.start(\"stage0\");\r\n    }\r\n  };\r\n  const panel1DragEnd = (ev: Event, info: PanInfo) => {\r\n    const shouldClose =\r\n      info.velocity.x > 20 || (info.velocity.x >= 0 && info.point.x > 45);\r\n    if (shouldClose) {\r\n      panel1Controls.start(\"stage1\");\r\n    } else {\r\n      panel1Controls.start(\"stage0\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <motion.div\r\n        ref={constrainstRef1}\r\n        className={styles.panelContainer1}\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <motion.div\r\n          drag=\"x\"\r\n          dragConstraints={constrainstRef1}\r\n          className={styles.panel1}\r\n          style={{ x, zIndex: 999 }}\r\n          animate={panel1Controls}\r\n          variants={{\r\n            stage0: { x: 0 },\r\n            stage1: { x: window.innerWidth },\r\n          }}\r\n          transition={{\r\n            type: \"spring\",\r\n            damping: 40,\r\n            stiffness: 400,\r\n          }}\r\n          onDragEnd={panel2DragEnd}\r\n          dragElastic={0}\r\n        >\r\n          <Card>{panel1Children}</Card>\r\n        </motion.div>\r\n        <motion.div\r\n          drag=\"x\"\r\n          dragConstraints={constrainstRef2}\r\n          className={styles.panel2}\r\n          style={{ x, zIndex: 999 }}\r\n          animate={panel2Controls}\r\n          variants={{\r\n            stage0: { x: 0 },\r\n            stage1: { x: window.innerWidth },\r\n          }}\r\n          transition={{\r\n            type: \"spring\",\r\n            damping: 40,\r\n            stiffness: 400,\r\n          }}\r\n          onDragEnd={panel1DragEnd}\r\n          dragElastic={0}\r\n        >\r\n          <Card>{panel2Children}</Card>\r\n        </motion.div>\r\n      </motion.div>\r\n      <motion.div\r\n        ref={constrainstRef2}\r\n        className={styles.panelContainer2}\r\n        style={{ height: \"100vh\" }}\r\n      ></motion.div>\r\n    </div>\r\n  );\r\n};\r\n","/home/jools/uni-bus-react/src/components/Map/mapstyles-light.ts",[],"/home/jools/uni-bus-react/src/components/Map/mapstyles-dark.ts",[],"/home/jools/uni-bus-react/src/config.ts",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":29,"column":7,"nodeType":"56","messageId":"57","endLine":29,"endColumn":60},{"ruleId":"59","severity":1,"message":"60","line":105,"column":6,"nodeType":"61","endLine":105,"endColumn":16,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"60","line":116,"column":6,"nodeType":"61","endLine":116,"endColumn":19,"suggestions":"63"},{"ruleId":"54","severity":1,"message":"64","line":21,"column":43,"nodeType":"56","messageId":"57","endLine":21,"endColumn":48},{"ruleId":"59","severity":1,"message":"65","line":32,"column":6,"nodeType":"61","endLine":32,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'getLocation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'map' and 'padding'. Either include them or remove the dependency array.","ArrayExpression",["69"],["70"],"'style' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onLoad' and 'x'. Either include them or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [map, padding, position]",{"range":"78","text":"79"},"Update the dependencies array to be: [currentStop, map, padding]",{"range":"80","text":"81"},"Update the dependencies array to be: [onLoad, x]",{"range":"82","text":"83"},[2983,2993],"[map, padding, position]",[3273,3286],"[currentStop, map, padding]",[823,825],"[onLoad, x]"]